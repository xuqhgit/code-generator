<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="{{ mapperPackage }}.{{ mapperClass }}">

	<sql id="{{ sClassName }}Columns">
        {% for field in dbFields %}{{ dbTableAlias }}.{{ field.dbField }} as {{ field.name }}{% if not loop.last %},{% endif %}{% endfor %}
	</sql>

	<!-- 修改 -->
	<update id="update" parameterType="{{ sClassName }}">
		update {{ table }}
		<set>
			{% for field in dbFields %}
			<if test="{{ field.name }} != null">
				{{ field.dbField }} = #{ {{ field.name }} },
			</if>{% endfor %}

		</set>
		where ID = #{id}
	</update>


	<insert id="insert" parameterType="{{ sClassName }}" {% if idGenerator=='AUTO' %}useGeneratedKeys="true" keyProperty="id"{% endif %}   >
		INSERT INTO {{ table }}(
			{% for field in dbFields %}{{ field.dbField }}{% if not loop.last %},{% endif %}{% endfor %}
		)
		VALUES(
			{% for field in dbFields %} {% if idGenerator=='GUID()' and field.dbField=='ID' %} GUID() {% elif idGenerator.find("SEQ")>-1 and  field.dbField=='ID' %}  {{idGenerator}}.NEXTVAL{% elif db=='MYSQL' and field.dbField=='UPDATE_TIME' %} now() {% elif db=='ORACLE' and  field.dbField=='UPDATE_TIME' %}  SYSDATE {% else %} #{ {{ field.name }} } {% endif %}{% if not loop.last %},{% endif %}{% endfor %}
		)
	</insert>


	<!-- 根据主键获取 -->
	<select id="get" parameterType="java.lang.Long" resultType="{{ sClassName }}">
		SELECT
		<include refid="{{ sClassName }}Columns" />
		FROM  {{ table }} {{ dbTableAlias }}
		where id = #{ id }
	</select>

	<!-- 获取列表 -->
	<select id="getList"  resultType="{{ sClassName }}">
		select
		<include refid="{{ sClassName }}Columns" />
		from {{ table }} {{ dbTableAlias }}
	</select>

	<select id="getListByPage" parameterType="com.anchor.core.common.query.QueryPage"  resultType="{{ sClassName }}">
		select
		<include refid="{{ sClassName }}Columns" />
		from {{ table }} {{ dbTableAlias }}
        <where>
            {% for field in dbFields %}  {% if field.searchFieldType and field.searchFieldType=='like' %}
			<if test="t.{{ field.name }}!=null and t.{{ field.name }}!=''">
				and instr({{ dbTableAlias }}.{{ field.dbField }},#{ t.{{ field.name }} })>0
			</if>{% endif %}{% endfor %}
		</where>
		<choose>
			<when test="sort!=null and sortOrder!=null">
				order by {{ dbTableAlias }}.${sort} ${sortOrder}
			</when>
			<otherwise>
				order by {{ dbTableAlias }}.CREATE_TIME DESC
			</otherwise>
		</choose>
	</select>

</mapper>